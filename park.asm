.MODEL SMALL
.STACK 100H

.DATA
    MENU DB '*************SELECT OPTION***************$'
    MENU_TRUCK DB 'PRESS 1 FOR TRUCK ,WITH COST =250 PER HOUR. $'
    MENU_CAR DB 'PRESS 2 FOR CAR ,WITH COST =150 PER HOUR. $'
    MENU_BUS DB 'PRESS 3 FOR BUS ,WITH COST =200 PER HOUR. $'
    MENU_SHOW DB 'PRESS 4 TO SHOW THE RECORD$'
    MENU_DELETE DB 'PRESS 5 TO DELETE THE RECORD$'
    MENU_EXIT DB 'PRESS 6 TO EXIT$'

    ASK_HOURS DB 'HOW MANY HOURS DO YOU WANT TO PARK? $'
    FULL DB 'PARKING IS FULL$'
    WRONG DB 'WRONG INPUT$'

    COST DB 'THE TOTAL AMOUNT IS = $'
    TOTAL_VECHILE DB 'THE TOTAL NUMBER OF VEHICLE PARKED = $'
    TOTAL_TRUCK DB 'THE TOTAL NUMBER OF TRUCKS PARKED = $'
    TOTAL_CAR DB 'THE TOTAL NUMBER OF CARS PARKED = $'
    TOTAL_BUS DB 'THE TOTAL NUMBER OF BUSES PARKED = $'
    DEL_RECORD DB '*RECORD DELETED SUCCESSFULLY*$'

    AMOUNT DW 0
    COUNT DW '0'

    R DW '0'
    C DW '0'
    B DW '0'

    TRUCK_AMOUNT DW 0
    CAR_AMOUNT DW 0
    BUS_AMOUNT DW 0
    TOTAL_AMOUNT DW 0  

.CODE
MAIN PROC

    MOV AX, @DATA
    MOV DS, AX
    
WHILE_:

    CALL NEWLINE 
    MOV DX, OFFSET MENU
    MOV AH, 9
    INT 21H
    CALL NEWLINE

    MOV DX, OFFSET MENU_TRUCK
    MOV AH, 9
    INT 21H
    CALL NEWLINE

    MOV DX, OFFSET MENU_CAR
    MOV AH, 9
    INT 21H
    CALL NEWLINE

    MOV DX, OFFSET MENU_BUS
    MOV AH, 9
    INT 21H
    CALL NEWLINE

    MOV DX, OFFSET MENU_SHOW
    MOV AH, 9
    INT 21H
    CALL NEWLINE

    MOV DX, OFFSET MENU_DELETE
    MOV AH, 9
    INT 21H
    CALL NEWLINE

    MOV DX, OFFSET MENU_EXIT
    MOV AH, 9
    INT 21H
    CALL NEWLINE

   
    MOV AH, 1
    INT 21H
    MOV BL, AL
    CMP AL, '1'
    JE TRUCK
    
    CMP AL, '2'
    JE CAR
    CMP AL, '3'
    JE BUS
    
    CMP AL, '4'
    JE REC
    CMP AL, '5'
    JE DEL
    
    CMP AL, '6'
    JE END_

    
    MOV DX, OFFSET WRONG
    MOV AH, 9
    INT 21H
    CALL NEWLINE
    JMP WHILE_

TRUCK:
    CALL PARK_TRUCK
    JMP WHILE_

CAR:
    CALL PARK_CAR
    JMP WHILE_

BUS:
    CALL PARK_BUS
    JMP WHILE_

REC:
    CALL SHOW_RECORD
    JMP WHILE_

DEL:
    CALL DELETE_RECORD
    JMP WHILE_

END_:
    MOV AH, 4CH
    INT 21H
    
MAIN ENDP

PARK_TRUCK PROC
    CMP COUNT, '8'
    JG FULL_PARKING

    CALL NEWLINE
    MOV DX, OFFSET ASK_HOURS
    MOV AH, 9
    INT 21H
    MOV AH, 1
    INT 21H
    SUB AL, '0'
    MOV BL, AL

    
    MOV AX, 250
    MUL BL
    MOV TRUCK_AMOUNT, AX

    INC COUNT
    INC R

    ADD TOTAL_AMOUNT, AX

    CALL NEWLINE
    MOV DX, OFFSET COST
    MOV AH, 9
    INT 21H
    
    MOV AX, TRUCK_AMOUNT
    CALL PRINT_NUMBER
    CALL NEWLINE

    RET

FULL_PARKING:
    CALL NEWLINE
    MOV DX, OFFSET FULL
    MOV AH, 9
    INT 21H
    CALL NEWLINE
    RET
PARK_TRUCK ENDP

PARK_CAR PROC
    CMP COUNT, '3'
    JG FULL_PARKING
    
    CALL NEWLINE
    MOV DX, OFFSET ASK_HOURS
    MOV AH, 9
    INT 21H
    MOV AH, 1
    INT 21H
    SUB AL, '0'
    MOV BL, AL

    MOV AX, 150
    MUL BL
    MOV CAR_AMOUNT, AX

    INC COUNT
    INC C
    
    ADD TOTAL_AMOUNT, AX

    CALL NEWLINE
    MOV DX, OFFSET COST
    MOV AH, 9
    INT 21H
    MOV AX, CAR_AMOUNT
    CALL PRINT_NUMBER
    CALL NEWLINE
    
    RET
PARK_CAR ENDP

PARK_BUS PROC
    CMP COUNT, '4'
    JG FULL_PARKING
    
    CALL NEWLINE
    MOV DX, OFFSET ASK_HOURS
    MOV AH, 9
    INT 21H
    MOV AH, 1
    INT 21H
    SUB AL, '0'
    MOV BL, AL

    MOV AX, 200
    MUL BL
    MOV BUS_AMOUNT, AX

    INC COUNT
    INC B

    ADD TOTAL_AMOUNT, AX

    CALL NEWLINE
    MOV DX, OFFSET COST
    MOV AH, 9
    INT 21H
    MOV AX, BUS_AMOUNT
    CALL PRINT_NUMBER
    CALL NEWLINE

    RET
PARK_BUS ENDP

SHOW_RECORD PROC

    CALL NEWLINE
    MOV DX, OFFSET TOTAL_VECHILE
    MOV AH, 9
    INT 21H
    MOV DX, COUNT
    MOV AH, 2
    INT 21H
    CALL NEWLINE

    MOV DX, OFFSET TOTAL_TRUCK
    MOV AH, 9
    INT 21H
    MOV DX, R
    MOV AH, 2
    INT 21H
    CALL NEWLINE

    MOV DX, OFFSET TOTAL_BUS
    MOV AH, 9
    INT 21H
    MOV DX, C
    MOV AH, 2
    INT 21H
    CALL NEWLINE

    MOV DX, OFFSET TOTAL_BUS
    MOV AH, 9
    INT 21H
    MOV DX, B
    MOV AH, 2
    INT 21H

    CALL NEWLINE
    MOV DX, OFFSET COST    
    MOV AH, 9
    INT 21H
    MOV AX, TOTAL_AMOUNT   
    CALL PRINT_NUMBER
    CALL NEWLINE

    RET
SHOW_RECORD ENDP

DELETE_RECORD PROC
    MOV R, '0'
    MOV C, '0'
    MOV B, '0'
    MOV TRUCK_AMOUNT, 0
    MOV CAR_AMOUNT, 0
    MOV BUS_AMOUNT, 0
    MOV TOTAL_AMOUNT, 0   
    MOV COUNT, '0'

    CALL NEWLINE
    MOV DX, OFFSET DEL_RECORD
    MOV AH, 9
    INT 21H
    CALL NEWLINE
    RET
DELETE_RECORD ENDP

NEWLINE PROC
    MOV DL, 0DH    
    MOV AH, 2
    INT 21H

    MOV DL, 0AH   
    MOV AH, 2
    INT 21H
    RET
NEWLINE ENDP

PRINT_NUMBER PROC
  
    MOV DX, 0
    MOV BX, 10
    MOV CX, 0
    
PRINT_LOOP:
    DIV BX
    PUSH DX
    MOV DX, 0
    INC CX
    CMP AX, 0
    JNE PRINT_LOOP

PRINT_DIGITS:
    POP DX
    ADD DX, '0'
    MOV AH, 2
    INT 21H
    LOOP PRINT_DIGITS
    RET
    
PRINT_NUMBER ENDP
END MAIN
    
